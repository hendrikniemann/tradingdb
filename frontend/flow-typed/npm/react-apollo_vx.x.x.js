// flow-typed signature: 1ca2e0cbd63a3a5ca38ed05a57740dad
// flow-typed version: <<STUB>>/react-apollo_v^0.13.2/flow_v0.40.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'react-apollo'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'react-apollo' {
  declare class GraphQLDocument { }

  declare interface ApolloError {
    +message: string;
    +graphQLErrors: GraphQLError[];
    +networkError: Error | null;
    +extraInfo: any;
  }

  declare type QueryOptions = {
    name: string,
    pollingInterval: number,
    skip: boolean | (props: Object) => boolean,
  }

  declare type FetchMoreOptions = {
    query?: GraphQLDocument,

  }

  declare type ApolloQueryOperations = {
    refetch(): void,
    fetchMore(options: FetchMoreOptions): void,
  }

  declare type ApolloData = {
    loading: boolean,
    error: ApolloError,
    networkStatus: 1 | 2 | 3 | 4 | 6 | 7 | 8,
    variables: Object,
  }

  // Got this from https://github.com/flowtype/flow-typed/blob/master/definitions/npm/react-router-dom_v4.x.x/flow_v0.38.x-/react-router-dom_v4.x.x.js#L154
  declare type FunctionComponent<P> = (props: P) => ?React$Element<any>;
  declare type ClassComponent<D, P, S> = Class<React$Component<D, P, S>>;
  declare type HigherOrderComponent = <P, S>(
    Component: ClassComponent<void, P, S> | FunctionComponent<P>
  ) => ClassComponent<void, $Diff<P, { data: ApolloData }>, S>;

  declare export function gql(strings: string[], ...values: any[]): GraphQLDocument;

  declare export function compose(...args: Function[]): Function;

  declare export function graphql(query: GraphQLDocument, options: any): HigherOrderComponent;

  declare type NetworkInterfaceOptions = {
    uri?: string;
    opts?: RequestInit;
  }

  declare export function createNetworkInterface(
    options: NetworkInterfaceOptions
  ): NetworkInterface;

  declare export class ApolloClient {
    constructor(options: ClientOptions): ApolloClient;
  }

  declare export class ApolloProvider extends React$Component {
    props: {
      client: ApolloClient,
    }
  }
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'react-apollo/dist/index' {
  declare module.exports: any;
}

declare module 'react-apollo/dist/index.min' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/ApolloProvider' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/browser' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/graphql' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/index' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/parser' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/server' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/shallowEqual' {
  declare module.exports: any;
}

declare module 'react-apollo/lib/test-utils' {
  declare module.exports: any;
}

// Filename aliases
declare module 'react-apollo/dist/index.js' {
  declare module.exports: $Exports<'react-apollo/dist/index'>;
}
declare module 'react-apollo/dist/index.min.js' {
  declare module.exports: $Exports<'react-apollo/dist/index.min'>;
}
declare module 'react-apollo/lib/ApolloProvider.js' {
  declare module.exports: $Exports<'react-apollo/lib/ApolloProvider'>;
}
declare module 'react-apollo/lib/browser.js' {
  declare module.exports: $Exports<'react-apollo/lib/browser'>;
}
declare module 'react-apollo/lib/graphql.js' {
  declare module.exports: $Exports<'react-apollo/lib/graphql'>;
}
declare module 'react-apollo/lib/index.js' {
  declare module.exports: $Exports<'react-apollo/lib/index'>;
}
declare module 'react-apollo/lib/parser.js' {
  declare module.exports: $Exports<'react-apollo/lib/parser'>;
}
declare module 'react-apollo/lib/server.js' {
  declare module.exports: $Exports<'react-apollo/lib/server'>;
}
declare module 'react-apollo/lib/shallowEqual.js' {
  declare module.exports: $Exports<'react-apollo/lib/shallowEqual'>;
}
declare module 'react-apollo/lib/test-utils.js' {
  declare module.exports: $Exports<'react-apollo/lib/test-utils'>;
}
